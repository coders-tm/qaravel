import{f as n,bn as o}from"./index.a3094cdd.js";import{A as t}from"./api.b3b542e0.js";import{l as c}from"./lodash.2b44b28e.js";const u="qaravel",h="2.0.0",l="Qaravel is a Combination of Laravel and Quasar",p="Qaravel",d="DepokSarkar <depokbsmrstu@gmail.com>",m={ssl:{host:"qaravel.gomedia"},ssh:{user:"coderstm.com",server:"ssh.gb.stackcp.com",folders:{live:"~/qaravel.coderstm.com",alpha:"~/qaravel.coderstm.com"}}},g={dev:"yarn build:clean && mix",build:"yarn build:clean && mix --production",commit:'clear && git config core.ignorecase false && branch="$(git symbolic-ref -q HEAD)" || "dev" && branch=${branch##refs/heads/} && branch=${branch:-HEAD} && echo Commiting to Branch "$branch" && echo Please type your commit message && read msg && clear && git add . && git commit -m "$msg"',"push:git":'clear && git config core.ignorecase false && branch="$(git symbolic-ref -q HEAD)" || "dev" && branch=${branch##refs/heads/} && branch=${branch:-HEAD} && echo Pushing to Branch "$branch" && echo Please type your commit message && read msg && clear && git add . && git commit -m "$msg" && git push origin "$branch"',"push:live":"clear && echo Starting Live Push && yarn build:prod && yarn sync:live && echo Finished Live Push","push:alpha":"clear && echo Starting Alpha Push && yarn build:alpha && yarn sync:alpha && echo Finished Alpha Push ","build:prod":"quasar build -m pwa && yarn make:icons && yarn build","build:alpha":"cross-env BUILD_MODE=alpha quasar build -m pwa && yarn make:icons && yarn dev","build:dev":"quasar build -m pwa && yarn make:icons && yarn dev","make:icons":"icongenie generate -i app-icon.png","make:ssl":"mkcert $npm_package_config_ssl_host && mkcert -install",fresh:"php artisan migrate:fresh --seed","start:web":"yarn && quasar dev","start:queue":"php artisan queue:work --timeout=36000 --stop-when-empty","sync:live":'echo Starting File Sync && rsync -avz --delete --exclude-from=".syncignore" -e "ssh -p22 -i ~/.ssh/sync" * $npm_package_config_ssh_user@$npm_package_config_ssh_server:$npm_package_config_ssh_folders_live && ssh -i ~/.ssh/sync $npm_package_config_ssh_user@$npm_package_config_ssh_server "cd $npm_package_config_ssh_folders_live && /usr/bin/php81 -f /usr/local/bin/composer2 install && /usr/bin/php81 artisan config:cache && /usr/bin/php81 artisan migrate && /usr/bin/php81 artisan storage:link --force" && echo Finished Live File Sync',"sync:alpha":'echo Starting File Sync && rsync -avz --delete --exclude-from=".syncignore" -e "ssh -p22 -i ~/.ssh/sync" * $npm_package_config_ssh_user@$npm_package_config_ssh_server:$npm_package_config_ssh_folders_alpha && ssh -i ~/.ssh/sync $npm_package_config_ssh_user@$npm_package_config_ssh_server "cd $npm_package_config_ssh_folders_alpha && /usr/bin/php81 -f /usr/local/bin/composer2 install && /usr/bin/php81 artisan config:cache && /usr/bin/php81 artisan migrate && /usr/bin/php81 artisan storage:link --force" && echo Finished Alpha File Sync',"build:clean":"echo Cleaning old build && del-cli public/assets public/pdfjs public/mix-manifest.json",generate:"./command --init",lint:"eslint --ext .js,.vue ./",format:'prettier --write "**/*.{js,vue,scss,html,md,json}" --ignore-path .gitignore',test:'echo "No test specified" && exit 0'},f={"@coders-tm/vue-number-format":"^3.1.2","@fortawesome/fontawesome-pro":"^6.1.2","@quasar/extras":"^1.0.0",axios:"^0.27",lodash:"^4.17.19",pinia:"^2.0.11",quasar:"^2.6.0",vue:"^3.0.0","vue-i18n":"^9.0.0","vue-router":"^4.0.0"},b={"@faker-js/faker":"^7.4.0","@intlify/vite-plugin-vue-i18n":"^3.3.1","@originjs/vite-plugin-require-context":"^1.0.9","@quasar/app-vite":"^1.0.0",autoprefixer:"^10.4.2","cross-env":"^7.0.3","del-cli":"^5.0.0",dotenv:"^16.0.1",eslint:"^8.10.0","eslint-config-prettier":"^8.1.0","eslint-plugin-vue":"^9.0.0","laravel-mix":"^6.0.49",prettier:"^2.5.1","workbox-build":"^6.5.0","workbox-cacheable-response":"^6.5.0","workbox-core":"^6.5.0","workbox-expiration":"^6.5.0","workbox-precaching":"^6.5.0","workbox-routing":"^6.5.0","workbox-strategies":"^6.5.0"},_={node:"^18 || ^16 || ^14.19",npm:">= 6.13.4",yarn:">= 1.21.1"};var v={name:u,version:h,description:l,productName:p,author:d,private:!0,config:m,scripts:g,dependencies:f,devDependencies:b,engines:_};const k=n.getItem("current_user"),y=n.has("current_user"),x=o("app",{state:()=>({user:k||{},authenticated:y,defaultSideMenus:[{title:"Dashboard",icon:"fas fa-tachometer-alt",route:"Dashboard",module:"Dashboard",plans:["Free"]},{title:"Videos",icon:"fas fa-film",route:"Videos",module:"Videos",plans:["Free"]},{title:"Streams",icon:"fas fa-signal-stream",route:"Streams",module:"Streams",plans:["Free"]},{title:"Teams",icon:"fas fa-users",route:"Teams",module:"Teams",plans:["Free"]},{title:"Publishers",icon:"fas fa-bullhorn",route:"Publishers",module:"Publishers",plans:["Free"]}],version:v.version}),getters:{hasPermission(s){return a=>s.user.modules?!!s.user.modules.find(r=>r.name===a):!1},hasModulePermission(s){return(a,r=!1)=>{if(s.user.modules){const e=s.user.modules.find(i=>i.name===a);return!r&&e?!0:!!(r&&e&&e.permissions.find(i=>i.action===r))}return!1}},getPermissions(s){return a=>{if(s.user.modules){var r=s.user.modules.find(e=>e.name===a);return r?(r=c.exports.map(r.permissions,"action"),r):[]}return[]}},isAuthenticated(s){return s.authenticated},sideMenus(s){return s.defaultSideMenus}},actions:{async login(s){return await t.get("csrf-cookie"),new Promise((a,r)=>{t.post("auth/login",s).then(e=>{this.updateCurrentUser(e),a(e)}).catch(e=>{this.updateCurrentUser(!1),r(e)})})},async signUp(s){return await t.get("csrf-cookie"),new Promise((a,r)=>{t.post("auth/signup",s).then(e=>{this.updateCurrentUser(e),a(e)}).catch(e=>{this.updateCurrentUser(!1),r(e)})})},currentUser(){return new Promise((s,a)=>{t.post("auth/me",{guard:this.user.guard}).then(r=>{this.updateCurrentUser(r),s(r)}).catch(r=>{this.updateCurrentUser(!1),a(r)})})},updateCurrentUser(s){s?(this.authenticated=!0,this.user=s,n.set("current_user",s)):(this.authenticated=!1,n.remove("current_user"))},update(s){return new Promise((a,r)=>{t.post("auth/update",s).then(e=>{this.updateCurrentUser(e),a(e)}).catch(e=>{r(e)})})},password(s){return new Promise((a,r)=>{t.post("auth/password",s).then(e=>{a(e)}).catch(e=>{r(e)})})},async forgotPassword(s){return await t.get("csrf-cookie"),new Promise((a,r)=>{t.post("auth/forgot-password",s).then(e=>{a(e)}).catch(e=>{r(e)})})},async resetPassword(s){return await t.get("csrf-cookie"),new Promise((a,r)=>{t.post("auth/reset-password",s).then(e=>{a(e)}).catch(e=>{r(e)})})},logout(){return new Promise((s,a)=>{t.post("auth/logout",{guard:this.user.guard}).then(r=>{this.updateCurrentUser(!1),s(r)}).catch(r=>{a(r)})})},createAccessToken(s){return new Promise((a,r)=>{t.post("auth/access-token/store",s).then(e=>{a(e)}).catch(e=>{r(e)})})}}});export{x as u};
